// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rangedb.proto

package rangedbpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventsRequest struct {
	StartingWithEventNumber uint64   `protobuf:"varint,1,opt,name=startingWithEventNumber,proto3" json:"startingWithEventNumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *EventsRequest) Reset()         { *m = EventsRequest{} }
func (m *EventsRequest) String() string { return proto.CompactTextString(m) }
func (*EventsRequest) ProtoMessage()    {}
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{0}
}

func (m *EventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsRequest.Unmarshal(m, b)
}
func (m *EventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsRequest.Marshal(b, m, deterministic)
}
func (m *EventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsRequest.Merge(m, src)
}
func (m *EventsRequest) XXX_Size() int {
	return xxx_messageInfo_EventsRequest.Size(m)
}
func (m *EventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsRequest proto.InternalMessageInfo

func (m *EventsRequest) GetStartingWithEventNumber() uint64 {
	if m != nil {
		return m.StartingWithEventNumber
	}
	return 0
}

type EventsByStreamRequest struct {
	StreamName              string   `protobuf:"bytes,1,opt,name=streamName,proto3" json:"streamName,omitempty"`
	StartingWithEventNumber uint64   `protobuf:"varint,2,opt,name=startingWithEventNumber,proto3" json:"startingWithEventNumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *EventsByStreamRequest) Reset()         { *m = EventsByStreamRequest{} }
func (m *EventsByStreamRequest) String() string { return proto.CompactTextString(m) }
func (*EventsByStreamRequest) ProtoMessage()    {}
func (*EventsByStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{1}
}

func (m *EventsByStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsByStreamRequest.Unmarshal(m, b)
}
func (m *EventsByStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsByStreamRequest.Marshal(b, m, deterministic)
}
func (m *EventsByStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsByStreamRequest.Merge(m, src)
}
func (m *EventsByStreamRequest) XXX_Size() int {
	return xxx_messageInfo_EventsByStreamRequest.Size(m)
}
func (m *EventsByStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsByStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsByStreamRequest proto.InternalMessageInfo

func (m *EventsByStreamRequest) GetStreamName() string {
	if m != nil {
		return m.StreamName
	}
	return ""
}

func (m *EventsByStreamRequest) GetStartingWithEventNumber() uint64 {
	if m != nil {
		return m.StartingWithEventNumber
	}
	return 0
}

type EventsByAggregateTypeRequest struct {
	AggregateTypes          []string `protobuf:"bytes,1,rep,name=aggregateTypes,proto3" json:"aggregateTypes,omitempty"`
	StartingWithEventNumber uint64   `protobuf:"varint,2,opt,name=startingWithEventNumber,proto3" json:"startingWithEventNumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *EventsByAggregateTypeRequest) Reset()         { *m = EventsByAggregateTypeRequest{} }
func (m *EventsByAggregateTypeRequest) String() string { return proto.CompactTextString(m) }
func (*EventsByAggregateTypeRequest) ProtoMessage()    {}
func (*EventsByAggregateTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{2}
}

func (m *EventsByAggregateTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsByAggregateTypeRequest.Unmarshal(m, b)
}
func (m *EventsByAggregateTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsByAggregateTypeRequest.Marshal(b, m, deterministic)
}
func (m *EventsByAggregateTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsByAggregateTypeRequest.Merge(m, src)
}
func (m *EventsByAggregateTypeRequest) XXX_Size() int {
	return xxx_messageInfo_EventsByAggregateTypeRequest.Size(m)
}
func (m *EventsByAggregateTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsByAggregateTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsByAggregateTypeRequest proto.InternalMessageInfo

func (m *EventsByAggregateTypeRequest) GetAggregateTypes() []string {
	if m != nil {
		return m.AggregateTypes
	}
	return nil
}

func (m *EventsByAggregateTypeRequest) GetStartingWithEventNumber() uint64 {
	if m != nil {
		return m.StartingWithEventNumber
	}
	return 0
}

type SubscribeToEventsRequest struct {
	StartingWithEventNumber uint64   `protobuf:"varint,1,opt,name=startingWithEventNumber,proto3" json:"startingWithEventNumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *SubscribeToEventsRequest) Reset()         { *m = SubscribeToEventsRequest{} }
func (m *SubscribeToEventsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeToEventsRequest) ProtoMessage()    {}
func (*SubscribeToEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{3}
}

func (m *SubscribeToEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeToEventsRequest.Unmarshal(m, b)
}
func (m *SubscribeToEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeToEventsRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeToEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeToEventsRequest.Merge(m, src)
}
func (m *SubscribeToEventsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeToEventsRequest.Size(m)
}
func (m *SubscribeToEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeToEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeToEventsRequest proto.InternalMessageInfo

func (m *SubscribeToEventsRequest) GetStartingWithEventNumber() uint64 {
	if m != nil {
		return m.StartingWithEventNumber
	}
	return 0
}

type SubscribeToEventsByAggregateTypeRequest struct {
	AggregateTypes          []string `protobuf:"bytes,1,rep,name=aggregateTypes,proto3" json:"aggregateTypes,omitempty"`
	StartingWithEventNumber uint64   `protobuf:"varint,2,opt,name=startingWithEventNumber,proto3" json:"startingWithEventNumber,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *SubscribeToEventsByAggregateTypeRequest) Reset() {
	*m = SubscribeToEventsByAggregateTypeRequest{}
}
func (m *SubscribeToEventsByAggregateTypeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeToEventsByAggregateTypeRequest) ProtoMessage()    {}
func (*SubscribeToEventsByAggregateTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{4}
}

func (m *SubscribeToEventsByAggregateTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest.Unmarshal(m, b)
}
func (m *SubscribeToEventsByAggregateTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeToEventsByAggregateTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest.Merge(m, src)
}
func (m *SubscribeToEventsByAggregateTypeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest.Size(m)
}
func (m *SubscribeToEventsByAggregateTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeToEventsByAggregateTypeRequest proto.InternalMessageInfo

func (m *SubscribeToEventsByAggregateTypeRequest) GetAggregateTypes() []string {
	if m != nil {
		return m.AggregateTypes
	}
	return nil
}

func (m *SubscribeToEventsByAggregateTypeRequest) GetStartingWithEventNumber() uint64 {
	if m != nil {
		return m.StartingWithEventNumber
	}
	return 0
}

type SaveEventsRequest struct {
	AggregateType        string   `protobuf:"bytes,1,opt,name=AggregateType,proto3" json:"AggregateType,omitempty"`
	AggregateID          string   `protobuf:"bytes,2,opt,name=AggregateID,proto3" json:"AggregateID,omitempty"`
	Events               []*Event `protobuf:"bytes,3,rep,name=Events,proto3" json:"Events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveEventsRequest) Reset()         { *m = SaveEventsRequest{} }
func (m *SaveEventsRequest) String() string { return proto.CompactTextString(m) }
func (*SaveEventsRequest) ProtoMessage()    {}
func (*SaveEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{5}
}

func (m *SaveEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveEventsRequest.Unmarshal(m, b)
}
func (m *SaveEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveEventsRequest.Marshal(b, m, deterministic)
}
func (m *SaveEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveEventsRequest.Merge(m, src)
}
func (m *SaveEventsRequest) XXX_Size() int {
	return xxx_messageInfo_SaveEventsRequest.Size(m)
}
func (m *SaveEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveEventsRequest proto.InternalMessageInfo

func (m *SaveEventsRequest) GetAggregateType() string {
	if m != nil {
		return m.AggregateType
	}
	return ""
}

func (m *SaveEventsRequest) GetAggregateID() string {
	if m != nil {
		return m.AggregateID
	}
	return ""
}

func (m *SaveEventsRequest) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type SaveEventResponse struct {
	EventsSaved          uint32   `protobuf:"varint,1,opt,name=EventsSaved,proto3" json:"EventsSaved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveEventResponse) Reset()         { *m = SaveEventResponse{} }
func (m *SaveEventResponse) String() string { return proto.CompactTextString(m) }
func (*SaveEventResponse) ProtoMessage()    {}
func (*SaveEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{6}
}

func (m *SaveEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveEventResponse.Unmarshal(m, b)
}
func (m *SaveEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveEventResponse.Marshal(b, m, deterministic)
}
func (m *SaveEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveEventResponse.Merge(m, src)
}
func (m *SaveEventResponse) XXX_Size() int {
	return xxx_messageInfo_SaveEventResponse.Size(m)
}
func (m *SaveEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveEventResponse proto.InternalMessageInfo

func (m *SaveEventResponse) GetEventsSaved() uint32 {
	if m != nil {
		return m.EventsSaved
	}
	return 0
}

type SaveEventFailureResponse struct {
	EventsSaved          uint32   `protobuf:"varint,1,opt,name=EventsSaved,proto3" json:"EventsSaved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveEventFailureResponse) Reset()         { *m = SaveEventFailureResponse{} }
func (m *SaveEventFailureResponse) String() string { return proto.CompactTextString(m) }
func (*SaveEventFailureResponse) ProtoMessage()    {}
func (*SaveEventFailureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{7}
}

func (m *SaveEventFailureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveEventFailureResponse.Unmarshal(m, b)
}
func (m *SaveEventFailureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveEventFailureResponse.Marshal(b, m, deterministic)
}
func (m *SaveEventFailureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveEventFailureResponse.Merge(m, src)
}
func (m *SaveEventFailureResponse) XXX_Size() int {
	return xxx_messageInfo_SaveEventFailureResponse.Size(m)
}
func (m *SaveEventFailureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveEventFailureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveEventFailureResponse proto.InternalMessageInfo

func (m *SaveEventFailureResponse) GetEventsSaved() uint32 {
	if m != nil {
		return m.EventsSaved
	}
	return 0
}

type TotalEventsInStreamRequest struct {
	StreamName           string   `protobuf:"bytes,1,opt,name=StreamName,proto3" json:"StreamName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalEventsInStreamRequest) Reset()         { *m = TotalEventsInStreamRequest{} }
func (m *TotalEventsInStreamRequest) String() string { return proto.CompactTextString(m) }
func (*TotalEventsInStreamRequest) ProtoMessage()    {}
func (*TotalEventsInStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{8}
}

func (m *TotalEventsInStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalEventsInStreamRequest.Unmarshal(m, b)
}
func (m *TotalEventsInStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalEventsInStreamRequest.Marshal(b, m, deterministic)
}
func (m *TotalEventsInStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalEventsInStreamRequest.Merge(m, src)
}
func (m *TotalEventsInStreamRequest) XXX_Size() int {
	return xxx_messageInfo_TotalEventsInStreamRequest.Size(m)
}
func (m *TotalEventsInStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalEventsInStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TotalEventsInStreamRequest proto.InternalMessageInfo

func (m *TotalEventsInStreamRequest) GetStreamName() string {
	if m != nil {
		return m.StreamName
	}
	return ""
}

type TotalEventsInStreamResponse struct {
	TotalEvents          uint64   `protobuf:"varint,1,opt,name=TotalEvents,proto3" json:"TotalEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalEventsInStreamResponse) Reset()         { *m = TotalEventsInStreamResponse{} }
func (m *TotalEventsInStreamResponse) String() string { return proto.CompactTextString(m) }
func (*TotalEventsInStreamResponse) ProtoMessage()    {}
func (*TotalEventsInStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{9}
}

func (m *TotalEventsInStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalEventsInStreamResponse.Unmarshal(m, b)
}
func (m *TotalEventsInStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalEventsInStreamResponse.Marshal(b, m, deterministic)
}
func (m *TotalEventsInStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalEventsInStreamResponse.Merge(m, src)
}
func (m *TotalEventsInStreamResponse) XXX_Size() int {
	return xxx_messageInfo_TotalEventsInStreamResponse.Size(m)
}
func (m *TotalEventsInStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalEventsInStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TotalEventsInStreamResponse proto.InternalMessageInfo

func (m *TotalEventsInStreamResponse) GetTotalEvents() uint64 {
	if m != nil {
		return m.TotalEvents
	}
	return 0
}

type Event struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Metadata             string   `protobuf:"bytes,4,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{10}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Event) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

type Record struct {
	AggregateType        string   `protobuf:"bytes,1,opt,name=AggregateType,proto3" json:"AggregateType,omitempty"`
	AggregateID          string   `protobuf:"bytes,2,opt,name=AggregateID,proto3" json:"AggregateID,omitempty"`
	GlobalSequenceNumber uint64   `protobuf:"varint,3,opt,name=GlobalSequenceNumber,proto3" json:"GlobalSequenceNumber,omitempty"`
	StreamSequenceNumber uint64   `protobuf:"varint,4,opt,name=StreamSequenceNumber,proto3" json:"StreamSequenceNumber,omitempty"`
	InsertTimestamp      uint64   `protobuf:"varint,5,opt,name=InsertTimestamp,proto3" json:"InsertTimestamp,omitempty"`
	EventID              string   `protobuf:"bytes,6,opt,name=EventID,proto3" json:"EventID,omitempty"`
	EventType            string   `protobuf:"bytes,7,opt,name=EventType,proto3" json:"EventType,omitempty"`
	Data                 string   `protobuf:"bytes,8,opt,name=Data,proto3" json:"Data,omitempty"`
	Metadata             string   `protobuf:"bytes,9,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_40660d2deccf2909, []int{11}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetAggregateType() string {
	if m != nil {
		return m.AggregateType
	}
	return ""
}

func (m *Record) GetAggregateID() string {
	if m != nil {
		return m.AggregateID
	}
	return ""
}

func (m *Record) GetGlobalSequenceNumber() uint64 {
	if m != nil {
		return m.GlobalSequenceNumber
	}
	return 0
}

func (m *Record) GetStreamSequenceNumber() uint64 {
	if m != nil {
		return m.StreamSequenceNumber
	}
	return 0
}

func (m *Record) GetInsertTimestamp() uint64 {
	if m != nil {
		return m.InsertTimestamp
	}
	return 0
}

func (m *Record) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *Record) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *Record) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Record) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func init() {
	proto.RegisterType((*EventsRequest)(nil), "rangedbpb.EventsRequest")
	proto.RegisterType((*EventsByStreamRequest)(nil), "rangedbpb.EventsByStreamRequest")
	proto.RegisterType((*EventsByAggregateTypeRequest)(nil), "rangedbpb.EventsByAggregateTypeRequest")
	proto.RegisterType((*SubscribeToEventsRequest)(nil), "rangedbpb.SubscribeToEventsRequest")
	proto.RegisterType((*SubscribeToEventsByAggregateTypeRequest)(nil), "rangedbpb.SubscribeToEventsByAggregateTypeRequest")
	proto.RegisterType((*SaveEventsRequest)(nil), "rangedbpb.SaveEventsRequest")
	proto.RegisterType((*SaveEventResponse)(nil), "rangedbpb.SaveEventResponse")
	proto.RegisterType((*SaveEventFailureResponse)(nil), "rangedbpb.SaveEventFailureResponse")
	proto.RegisterType((*TotalEventsInStreamRequest)(nil), "rangedbpb.TotalEventsInStreamRequest")
	proto.RegisterType((*TotalEventsInStreamResponse)(nil), "rangedbpb.TotalEventsInStreamResponse")
	proto.RegisterType((*Event)(nil), "rangedbpb.Event")
	proto.RegisterType((*Record)(nil), "rangedbpb.Record")
}

func init() { proto.RegisterFile("rangedb.proto", fileDescriptor_40660d2deccf2909) }

var fileDescriptor_40660d2deccf2909 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xde, 0xb4, 0xdd, 0xee, 0xe6, 0x2d, 0xad, 0xf6, 0xa9, 0x18, 0x6a, 0x91, 0x10, 0x75, 0xb7,
	0xa7, 0x22, 0x15, 0x41, 0x41, 0x10, 0x97, 0xa8, 0x44, 0x70, 0x85, 0x69, 0x61, 0x0f, 0x9e, 0x26,
	0xed, 0x58, 0x0b, 0x4d, 0xd2, 0x9d, 0x99, 0x2e, 0xec, 0xcd, 0x8b, 0x27, 0xff, 0x99, 0xbf, 0xc1,
	0x1f, 0x23, 0x99, 0x24, 0xed, 0x24, 0x4d, 0xba, 0x2c, 0x2e, 0x78, 0x9b, 0x7c, 0xdf, 0xbc, 0xef,
	0xbd, 0x79, 0xf3, 0xe6, 0x0b, 0xb4, 0x38, 0x0d, 0x67, 0x6c, 0xea, 0x0f, 0x96, 0x3c, 0x92, 0x11,
	0x9a, 0xe9, 0xe7, 0xd2, 0x77, 0x3c, 0x68, 0xbd, 0xbf, 0x64, 0xa1, 0x14, 0x84, 0x5d, 0xac, 0x98,
	0x90, 0xf8, 0x0a, 0x1e, 0x0a, 0x49, 0xb9, 0x9c, 0x87, 0xb3, 0xf3, 0xb9, 0xfc, 0xae, 0xc8, 0xb3,
	0x55, 0xe0, 0x33, 0x6e, 0x19, 0xb6, 0xd1, 0x6f, 0x90, 0x2a, 0xda, 0xb9, 0x80, 0x07, 0x89, 0xd4,
	0xe9, 0xd5, 0x48, 0x72, 0x46, 0x83, 0x4c, 0xf2, 0x31, 0x80, 0x50, 0xc0, 0x19, 0x0d, 0x98, 0x52,
	0x31, 0x89, 0x86, 0xec, 0x4a, 0x59, 0xdb, 0x9d, 0xf2, 0x87, 0x01, 0xbd, 0x2c, 0xe7, 0xbb, 0xd9,
	0x8c, 0xb3, 0x19, 0x95, 0x6c, 0x7c, 0xb5, 0x64, 0x59, 0xea, 0x63, 0x68, 0x53, 0x1d, 0x17, 0x96,
	0x61, 0xd7, 0xfb, 0x26, 0x29, 0xa0, 0xff, 0x50, 0xc2, 0x18, 0xac, 0xd1, 0xca, 0x17, 0x13, 0x3e,
	0xf7, 0xd9, 0x38, 0xba, 0xad, 0x5e, 0xfe, 0x32, 0xe0, 0x64, 0x4b, 0xf6, 0xbf, 0x9d, 0xf1, 0xa7,
	0x01, 0x9d, 0x11, 0xbd, 0x64, 0xf9, 0xd3, 0x3d, 0x85, 0x56, 0xae, 0x9e, 0xf4, 0x66, 0xf3, 0x20,
	0xda, 0x70, 0xb4, 0x06, 0x3c, 0x57, 0x65, 0x32, 0x89, 0x0e, 0x61, 0x1f, 0x9a, 0x89, 0xb0, 0x55,
	0xb7, 0xeb, 0xfd, 0xa3, 0xe1, 0xdd, 0xc1, 0x7a, 0x3c, 0x07, 0x8a, 0x20, 0x29, 0xef, 0xbc, 0xd4,
	0xca, 0x20, 0x4c, 0x2c, 0xa3, 0x50, 0xa8, 0x04, 0x09, 0x1d, 0x53, 0x53, 0x55, 0x44, 0x8b, 0xe8,
	0x90, 0xf3, 0x06, 0xac, 0x75, 0xd8, 0x07, 0x3a, 0x5f, 0xac, 0x38, 0xbb, 0x51, 0x74, 0x77, 0x1c,
	0x49, 0xba, 0x48, 0x30, 0x2f, 0xdc, 0x9a, 0xed, 0xd1, 0xd6, 0x6c, 0x6f, 0x10, 0xe7, 0x2d, 0x3c,
	0x2a, 0x8d, 0xde, 0xa4, 0xd7, 0xe8, 0x74, 0x2a, 0x74, 0xc8, 0xf9, 0x0a, 0xfb, 0x6a, 0x85, 0x6d,
	0xa8, 0x79, 0x6e, 0x9a, 0xa1, 0xe6, 0xb9, 0x88, 0xd0, 0x50, 0x5d, 0x4f, 0x3a, 0xaa, 0xd6, 0x31,
	0xe6, 0x52, 0x49, 0xad, 0x7a, 0x82, 0xc5, 0x6b, 0xec, 0xc2, 0xe1, 0x67, 0x26, 0xe9, 0x34, 0xc6,
	0x1b, 0x0a, 0x5f, 0x7f, 0x3b, 0xbf, 0x6b, 0xd0, 0x24, 0x6c, 0x12, 0xf1, 0xe9, 0xad, 0xdd, 0xe6,
	0x10, 0xee, 0x7f, 0x5c, 0x44, 0x3e, 0x5d, 0x8c, 0xe2, 0x0e, 0x85, 0x13, 0x96, 0x8e, 0x58, 0x5d,
	0x1d, 0xad, 0x94, 0x8b, 0x63, 0x92, 0xbe, 0x14, 0x62, 0x1a, 0x49, 0x4c, 0x19, 0x87, 0x7d, 0xb8,
	0xe3, 0x85, 0x82, 0x71, 0x39, 0x9e, 0x07, 0x4c, 0x48, 0x1a, 0x2c, 0xad, 0x7d, 0xb5, 0xbd, 0x08,
	0xa3, 0x05, 0x07, 0xaa, 0x83, 0x9e, 0x6b, 0x35, 0x55, 0xbd, 0xd9, 0x27, 0xf6, 0xc0, 0x54, 0x4b,
	0x75, 0xde, 0x03, 0xc5, 0x6d, 0x80, 0x75, 0x33, 0x0f, 0x2b, 0x9a, 0x69, 0xe6, 0x9b, 0x39, 0xfc,
	0xd3, 0x80, 0x03, 0x12, 0x4f, 0xae, 0x7b, 0x8a, 0xaf, 0xb3, 0x99, 0x46, 0xab, 0x38, 0xcd, 0xd9,
	0xfb, 0xe9, 0x76, 0x34, 0x26, 0xb9, 0x04, 0x67, 0xef, 0xb9, 0x81, 0x1e, 0xb4, 0xf3, 0x36, 0x8a,
	0xf6, 0x96, 0x44, 0xc1, 0x61, 0xab, 0xa4, 0xce, 0x37, 0x8e, 0x9c, 0xbf, 0xc6, 0x93, 0x12, 0xc5,
	0x32, 0x6f, 0xa9, 0x12, 0xfe, 0x02, 0x9d, 0x2d, 0x77, 0xc2, 0x27, 0xda, 0xde, 0x2a, 0x4b, 0xac,
	0x12, 0x0c, 0xc0, 0xbe, 0xce, 0xee, 0x70, 0xb8, 0x4b, 0xff, 0x66, 0xf5, 0x7f, 0x02, 0xd8, 0xf8,
	0x19, 0xf6, 0x74, 0xe1, 0xa2, 0xcd, 0x75, 0x4b, 0xd9, 0xec, 0x01, 0x3b, 0x7b, 0xf8, 0x0d, 0xee,
	0x95, 0xbc, 0x70, 0x7c, 0xa6, 0x85, 0x55, 0xfb, 0x47, 0xf7, 0xf8, 0xba, 0x6d, 0x59, 0x1e, 0xbf,
	0xa9, 0xfe, 0xdd, 0x2f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x87, 0x08, 0x50, 0x71, 0xcc, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RangeDBClient is the client API for RangeDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RangeDBClient interface {
	Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (RangeDB_EventsClient, error)
	EventsByStream(ctx context.Context, in *EventsByStreamRequest, opts ...grpc.CallOption) (RangeDB_EventsByStreamClient, error)
	EventsByAggregateType(ctx context.Context, in *EventsByAggregateTypeRequest, opts ...grpc.CallOption) (RangeDB_EventsByAggregateTypeClient, error)
	SubscribeToEvents(ctx context.Context, in *SubscribeToEventsRequest, opts ...grpc.CallOption) (RangeDB_SubscribeToEventsClient, error)
	SubscribeToEventsByAggregateType(ctx context.Context, in *SubscribeToEventsByAggregateTypeRequest, opts ...grpc.CallOption) (RangeDB_SubscribeToEventsByAggregateTypeClient, error)
	SaveEvents(ctx context.Context, in *SaveEventsRequest, opts ...grpc.CallOption) (*SaveEventResponse, error)
	TotalEventsInStream(ctx context.Context, in *TotalEventsInStreamRequest, opts ...grpc.CallOption) (*TotalEventsInStreamResponse, error)
}

type rangeDBClient struct {
	cc grpc.ClientConnInterface
}

func NewRangeDBClient(cc grpc.ClientConnInterface) RangeDBClient {
	return &rangeDBClient{cc}
}

func (c *rangeDBClient) Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (RangeDB_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RangeDB_serviceDesc.Streams[0], "/rangedbpb.RangeDB/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangeDBEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RangeDB_EventsClient interface {
	Recv() (*Record, error)
	grpc.ClientStream
}

type rangeDBEventsClient struct {
	grpc.ClientStream
}

func (x *rangeDBEventsClient) Recv() (*Record, error) {
	m := new(Record)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rangeDBClient) EventsByStream(ctx context.Context, in *EventsByStreamRequest, opts ...grpc.CallOption) (RangeDB_EventsByStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RangeDB_serviceDesc.Streams[1], "/rangedbpb.RangeDB/EventsByStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangeDBEventsByStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RangeDB_EventsByStreamClient interface {
	Recv() (*Record, error)
	grpc.ClientStream
}

type rangeDBEventsByStreamClient struct {
	grpc.ClientStream
}

func (x *rangeDBEventsByStreamClient) Recv() (*Record, error) {
	m := new(Record)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rangeDBClient) EventsByAggregateType(ctx context.Context, in *EventsByAggregateTypeRequest, opts ...grpc.CallOption) (RangeDB_EventsByAggregateTypeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RangeDB_serviceDesc.Streams[2], "/rangedbpb.RangeDB/EventsByAggregateType", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangeDBEventsByAggregateTypeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RangeDB_EventsByAggregateTypeClient interface {
	Recv() (*Record, error)
	grpc.ClientStream
}

type rangeDBEventsByAggregateTypeClient struct {
	grpc.ClientStream
}

func (x *rangeDBEventsByAggregateTypeClient) Recv() (*Record, error) {
	m := new(Record)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rangeDBClient) SubscribeToEvents(ctx context.Context, in *SubscribeToEventsRequest, opts ...grpc.CallOption) (RangeDB_SubscribeToEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RangeDB_serviceDesc.Streams[3], "/rangedbpb.RangeDB/SubscribeToEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangeDBSubscribeToEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RangeDB_SubscribeToEventsClient interface {
	Recv() (*Record, error)
	grpc.ClientStream
}

type rangeDBSubscribeToEventsClient struct {
	grpc.ClientStream
}

func (x *rangeDBSubscribeToEventsClient) Recv() (*Record, error) {
	m := new(Record)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rangeDBClient) SubscribeToEventsByAggregateType(ctx context.Context, in *SubscribeToEventsByAggregateTypeRequest, opts ...grpc.CallOption) (RangeDB_SubscribeToEventsByAggregateTypeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RangeDB_serviceDesc.Streams[4], "/rangedbpb.RangeDB/SubscribeToEventsByAggregateType", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangeDBSubscribeToEventsByAggregateTypeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RangeDB_SubscribeToEventsByAggregateTypeClient interface {
	Recv() (*Record, error)
	grpc.ClientStream
}

type rangeDBSubscribeToEventsByAggregateTypeClient struct {
	grpc.ClientStream
}

func (x *rangeDBSubscribeToEventsByAggregateTypeClient) Recv() (*Record, error) {
	m := new(Record)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rangeDBClient) SaveEvents(ctx context.Context, in *SaveEventsRequest, opts ...grpc.CallOption) (*SaveEventResponse, error) {
	out := new(SaveEventResponse)
	err := c.cc.Invoke(ctx, "/rangedbpb.RangeDB/SaveEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rangeDBClient) TotalEventsInStream(ctx context.Context, in *TotalEventsInStreamRequest, opts ...grpc.CallOption) (*TotalEventsInStreamResponse, error) {
	out := new(TotalEventsInStreamResponse)
	err := c.cc.Invoke(ctx, "/rangedbpb.RangeDB/TotalEventsInStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RangeDBServer is the server API for RangeDB service.
type RangeDBServer interface {
	Events(*EventsRequest, RangeDB_EventsServer) error
	EventsByStream(*EventsByStreamRequest, RangeDB_EventsByStreamServer) error
	EventsByAggregateType(*EventsByAggregateTypeRequest, RangeDB_EventsByAggregateTypeServer) error
	SubscribeToEvents(*SubscribeToEventsRequest, RangeDB_SubscribeToEventsServer) error
	SubscribeToEventsByAggregateType(*SubscribeToEventsByAggregateTypeRequest, RangeDB_SubscribeToEventsByAggregateTypeServer) error
	SaveEvents(context.Context, *SaveEventsRequest) (*SaveEventResponse, error)
	TotalEventsInStream(context.Context, *TotalEventsInStreamRequest) (*TotalEventsInStreamResponse, error)
}

// UnimplementedRangeDBServer can be embedded to have forward compatible implementations.
type UnimplementedRangeDBServer struct {
}

func (*UnimplementedRangeDBServer) Events(req *EventsRequest, srv RangeDB_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}
func (*UnimplementedRangeDBServer) EventsByStream(req *EventsByStreamRequest, srv RangeDB_EventsByStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method EventsByStream not implemented")
}
func (*UnimplementedRangeDBServer) EventsByAggregateType(req *EventsByAggregateTypeRequest, srv RangeDB_EventsByAggregateTypeServer) error {
	return status.Errorf(codes.Unimplemented, "method EventsByAggregateType not implemented")
}
func (*UnimplementedRangeDBServer) SubscribeToEvents(req *SubscribeToEventsRequest, srv RangeDB_SubscribeToEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToEvents not implemented")
}
func (*UnimplementedRangeDBServer) SubscribeToEventsByAggregateType(req *SubscribeToEventsByAggregateTypeRequest, srv RangeDB_SubscribeToEventsByAggregateTypeServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToEventsByAggregateType not implemented")
}
func (*UnimplementedRangeDBServer) SaveEvents(ctx context.Context, req *SaveEventsRequest) (*SaveEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveEvents not implemented")
}
func (*UnimplementedRangeDBServer) TotalEventsInStream(ctx context.Context, req *TotalEventsInStreamRequest) (*TotalEventsInStreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TotalEventsInStream not implemented")
}

func RegisterRangeDBServer(s *grpc.Server, srv RangeDBServer) {
	s.RegisterService(&_RangeDB_serviceDesc, srv)
}

func _RangeDB_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeDBServer).Events(m, &rangeDBEventsServer{stream})
}

type RangeDB_EventsServer interface {
	Send(*Record) error
	grpc.ServerStream
}

type rangeDBEventsServer struct {
	grpc.ServerStream
}

func (x *rangeDBEventsServer) Send(m *Record) error {
	return x.ServerStream.SendMsg(m)
}

func _RangeDB_EventsByStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsByStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeDBServer).EventsByStream(m, &rangeDBEventsByStreamServer{stream})
}

type RangeDB_EventsByStreamServer interface {
	Send(*Record) error
	grpc.ServerStream
}

type rangeDBEventsByStreamServer struct {
	grpc.ServerStream
}

func (x *rangeDBEventsByStreamServer) Send(m *Record) error {
	return x.ServerStream.SendMsg(m)
}

func _RangeDB_EventsByAggregateType_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsByAggregateTypeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeDBServer).EventsByAggregateType(m, &rangeDBEventsByAggregateTypeServer{stream})
}

type RangeDB_EventsByAggregateTypeServer interface {
	Send(*Record) error
	grpc.ServerStream
}

type rangeDBEventsByAggregateTypeServer struct {
	grpc.ServerStream
}

func (x *rangeDBEventsByAggregateTypeServer) Send(m *Record) error {
	return x.ServerStream.SendMsg(m)
}

func _RangeDB_SubscribeToEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeToEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeDBServer).SubscribeToEvents(m, &rangeDBSubscribeToEventsServer{stream})
}

type RangeDB_SubscribeToEventsServer interface {
	Send(*Record) error
	grpc.ServerStream
}

type rangeDBSubscribeToEventsServer struct {
	grpc.ServerStream
}

func (x *rangeDBSubscribeToEventsServer) Send(m *Record) error {
	return x.ServerStream.SendMsg(m)
}

func _RangeDB_SubscribeToEventsByAggregateType_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeToEventsByAggregateTypeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeDBServer).SubscribeToEventsByAggregateType(m, &rangeDBSubscribeToEventsByAggregateTypeServer{stream})
}

type RangeDB_SubscribeToEventsByAggregateTypeServer interface {
	Send(*Record) error
	grpc.ServerStream
}

type rangeDBSubscribeToEventsByAggregateTypeServer struct {
	grpc.ServerStream
}

func (x *rangeDBSubscribeToEventsByAggregateTypeServer) Send(m *Record) error {
	return x.ServerStream.SendMsg(m)
}

func _RangeDB_SaveEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RangeDBServer).SaveEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rangedbpb.RangeDB/SaveEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RangeDBServer).SaveEvents(ctx, req.(*SaveEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RangeDB_TotalEventsInStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TotalEventsInStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RangeDBServer).TotalEventsInStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rangedbpb.RangeDB/TotalEventsInStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RangeDBServer).TotalEventsInStream(ctx, req.(*TotalEventsInStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RangeDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rangedbpb.RangeDB",
	HandlerType: (*RangeDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveEvents",
			Handler:    _RangeDB_SaveEvents_Handler,
		},
		{
			MethodName: "TotalEventsInStream",
			Handler:    _RangeDB_TotalEventsInStream_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _RangeDB_Events_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventsByStream",
			Handler:       _RangeDB_EventsByStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventsByAggregateType",
			Handler:       _RangeDB_EventsByAggregateType_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeToEvents",
			Handler:       _RangeDB_SubscribeToEvents_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeToEventsByAggregateType",
			Handler:       _RangeDB_SubscribeToEventsByAggregateType_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rangedb.proto",
}
